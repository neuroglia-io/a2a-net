// Copyright © 2025-Present the a2a-net Authors
//
// Licensed under the Apache License, Version 2.0 (the "License"),
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

namespace A2A.Models;

/// <summary>
/// Represents an artifact generated for a task.
/// </summary>
[Description("Represents an artifact generated for a task.")]
[DataContract]
public record Artifact
{

    /// <summary>
    /// Gets or sets the unique identifier of the artifact, generated by the agent.
    /// </summary>
    [Description("The unique identifier of the artifact, generated by the agent.")]
    [Required, MinLength(1)]
    [DataMember(Name = "artifactId", Order = 1), JsonPropertyName("artifactId"), JsonPropertyOrder(1), YamlMember(Alias = "artifactId", Order = 1)]
    public virtual string ArtifactId { get; set; } = null!;

    /// <summary>
    /// Gets or sets the artifact's descriptive name, if any.
    /// </summary>
    [Description("The artifact's name, if any.")]
    [DataMember(Name = "name", Order = 2), JsonPropertyName("name"), JsonPropertyOrder(2), YamlMember(Alias = "name", Order = 2)]
    public virtual string? Name { get; set; }

    /// <summary>
    /// Gets or sets the human-readable description of the artifact., if any.
    /// </summary>
    [Description("The human-readable description of the artifact, if any.")]
    [DataMember(Name = "description", Order = 3), JsonPropertyName("description"), JsonPropertyOrder(3), YamlMember(Alias = "description", Order = 3)]
    public virtual string? Description { get; set; }

    /// <summary>
    /// Gets or sets a list containing the artifact's parts, if any.
    /// </summary>
    [Description("A list containing the artifact's parts, if any.")]
    [Required, MinLength(1)]
    [DataMember(Name = "parts", Order = 4), JsonPropertyName("parts"), JsonPropertyOrder(4), YamlMember(Alias = "parts", Order = 4)]
    public virtual EquatableList<Part> Parts { get; set; } = null!;

    /// <summary>
    /// Gets or sets arbitrary key/value metadata associated with the artifact.
    /// </summary>
    [Description("Arbitrary key/value metadata associated with the artifact.")]
    [DataMember(Name = "metadata", Order = 5), JsonPropertyName("metadata"), JsonPropertyOrder(5), YamlMember(Alias = "metadata", Order = 5)]
    public virtual EquatableDictionary<string, object>? Metadata { get; set; }

    /// <summary>
    /// Gets or sets a list containing the URIs of the extensions, if any, that contributed to the artifact.
    /// </summary>
    [Description("A list containing the URIs of the extensions, if any, that contributed to the artifact.")]
    [DataMember(Name = "extensions", Order = 6), JsonPropertyName("extensions"), JsonPropertyOrder(6), YamlMember(Alias = "extensions", Order = 6)]
    public virtual EquatableList<string>? Extensions { get; set; }

}
