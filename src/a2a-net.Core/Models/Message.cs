// Copyright © 2025-Present the a2a-net Authors
//
// Licensed under the Apache License, Version 2.0 (the "License"),
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

namespace A2A.Models;

/// <summary>
/// Represents a message.
/// </summary>
[Description("Represents a message.")]
[DataContract]
public record Message
{

    /// <summary>
    /// Gets the event's tpe discriminator.
    /// </summary>
    [Description("The event's type discriminator.")]
    [DataMember(Name = "kind", Order = 1), JsonPropertyName("kind"), JsonPropertyOrder(1), YamlMember(Alias = "kind", Order = 1)]
    public virtual string Kind { get; } = "message";

    /// <summary>
    /// Gets or sets the message's role.
    /// </summary>
    [Description("The message's role.")]
    [Required, AllowedValues(MessageRole.Agent, MessageRole.User)]
    [DataMember(Name = "role", Order = 2), JsonPropertyName("role"), JsonPropertyOrder(2), YamlMember(Alias = "role", Order = 2)]
    public virtual string Role { get; set; } = null!;

    /// <summary>
    /// Gets or sets a list containing the message's parts, if any.
    /// </summary>
    [Description("A list containing the message's parts, if any.")]
    [DataMember(Name = "parts", Order = 3), JsonPropertyName("parts"), JsonPropertyOrder(3), YamlMember(Alias = "parts", Order = 3)]
    public virtual EquatableList<Part>? Parts { get; set; }

    /// <summary>
    /// Gets or sets a key/value mapping that contains the message's additional properties, if any.
    /// </summary>
    [Description("A key/value mapping that contains the message's additional properties, if any.")]
    [DataMember(Name = "metadata", Order = 4), JsonPropertyName("metadata"), JsonPropertyOrder(4), YamlMember(Alias = "metadata", Order = 4)]
    public virtual EquatableDictionary<string, object>? Metadata { get; set; }

    /// <summary>
    /// Gets or sets a list containing the URIs of the extensions, if any, that contributed to this message.
    /// </summary>
    [Description("A list containing the URIs of the extensions, if any, that contributed to this message.")]
    [DataMember(Name = "extensions", Order = 5), JsonPropertyName("extensions"), JsonPropertyOrder(5), YamlMember(Alias = "extensions", Order = 5)]
    public virtual EquatableList<string>? Extensions { get; set; }

    /// <summary>
    /// Gets or sets a list of tasks, if any, referenced as contextual hint by this message.
    /// </summary>
    [Description("A list of tasks, if any, referenced as contextual hint by this message.")]
    [DataMember(Name = "referenceTaskIds", Order = 6), JsonPropertyName("referenceTaskIds"), JsonPropertyOrder(6), YamlMember(Alias = "referenceTaskIds", Order = 6)]
    public virtual EquatableList<string>? ReferenceTaskIds { get; set; }

    /// <summary>
    /// Gets or sets the message identifier, if any, generated by the message sender.
    /// </summary>
    [Description("The message identifier, if any, generated by the message sender.")]
    [DataMember(Name = "messageId", Order = 7), JsonPropertyName("messageId"), JsonPropertyOrder(7), YamlMember(Alias = "messageId", Order = 7)]
    public virtual string? MessageId { get; set; }

    /// <summary>
    /// Gets or sets the identifier of the task, if any, the current message is related to.
    /// </summary>
    [Description("The identifier of the task, if any, the current message is related to.")]
    [DataMember(Name = "taskId", Order = 8), JsonPropertyName("taskId"), JsonPropertyOrder(8), YamlMember(Alias = "taskId", Order = 8)]
    public virtual string? TaskId { get; set; }

    /// <summary>
    /// Gets or sets the identifier of the context, if any, the current message is related to.
    /// </summary>
    [Description("The identifier of the context, if any, the current message is related to.")]
    [DataMember(Name = "contextId", Order = 9), JsonPropertyName("contextId"), JsonPropertyOrder(9), YamlMember(Alias = "contextId", Order = 9)]
    public virtual string? ContextId { get; set; }

}
